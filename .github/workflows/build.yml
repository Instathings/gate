name: buildx

on:
  push:
    branches: 
      - development
      - master
    tags:

jobs:
  buildx:
    runs-on: ubuntu-latest
    steps:
      - 
        name: Docker login
        run: echo '${{ secrets.DOCKERHUB_PASS }}' | docker login --username userbuilder --password-stdin
      -
        name: Checkout
        uses: actions/checkout@v1
      -
        name: run
        run: pwd 
      -
        name: run
        run: npm i
      -
        name: run
        run: npm test
      -
        name: run
        run: ls -la 
      -
        name: Set up Docker Buildx
        id: buildx
        uses: crazy-max/ghaction-docker-buildx@v1
        with:
          version: latest
      -
        name: Available platforms
        run: echo ${{ steps.buildx.outputs.platforms }}
      -
        name: set up image tag
        run: if [ "${GITHUB_REF##*/}" == "development" ]; then echo "::set-env name=TAG::staging"; fi
      -
        name: set up image tag
        run: if [ "${GITHUB_REF##*/}" == "master" ]; then echo "::set-env name=TAG::latest";  fi
      -
        name: set up image tag
        run: if [ "${GITHUB_REF##*/}" == "master" ]; then sed -i "s/RUN git checkout development/#/g" Dockerfile;  fi
      -
        name: cat
        run: cat Dockerfile
      -
        name: set up image tag
        run: if [ "${GITHUB_REF##*/}" == "autobuild" ]; then echo "::set-env name=TAG::test"; fi
      -
        name: echo branch
        run: echo ${{env.TAG}}
      -
        name: Run Buildx
        run: |
          docker buildx build --platform linux/arm/v7,linux/arm64,linux/amd64 -t instathings/gate:${{env.TAG}} --file ./Dockerfile --no-cache --push ./
